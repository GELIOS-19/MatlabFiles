format compact
% Arjun Sheshadri
% 7132
% Section C1
% Math 250 MATLAB Lab Assignment #5
rand('seed', 7132)
eigshow
% Question 1 (a) (i)
% A has one positive eigenvalue
% Question 1 (a) (ii)
% A has one negative eigenvalue
% Question 1 (a) (iii)
% Eigenvector x has length 1 and A*x seems to have a length of about 1.25 times the length of the eigenvector, so we can assume that the eigenvalue is about 1.25. For the negative eigenvalue, eigenvector x has length 1 and A*x seems to be about 1/3 of the length of x, therefore the eigenvalue would be about 1/3.
% Question 1 (b) (i)
% There are no lines through the origin that contain both Ax and x.
% Question 1 (b) (ii)
% No, A does not have any real eigenvalues because there are no lines on the graph that contain both Ax and x
% Question 2
A = [1 3; 4 2]/4
A =
    0.2500    0.7500
    1.0000    0.5000
% Question 2 (a)
syms t; I = eye(2); p = det(A - t*I)
p =
t^2 - (3*t)/4 - 5/8
% The det(A) = (1/4*1/2)-(3/4*1) = (1/8)-(3/4) = -5/8, which is the same as the constant term -5/8 in p(t)
% Question 2 (b)
solve(p)
ans =
-1/2
 5/4
eigshow
% Question 2 (c)
A = [3 1 ; -2 4 ]/4
A =
    0.7500    0.2500
   -0.5000    1.0000
syms t; I = eye(2); p = det(A - t*I)
p =
t^2 - (7*t)/4 + 7/8
solve(p)
ans =
7/8 - (7^(1/2)*1i)/8
(7^(1/2)*1i)/8 + 7/8
% The eigenvalues for A are not real and this matches what we saw graphically as there were no real positions were A*x and x aligned.
% Question 3 (a)
rand('seed', 7132)
A = rmat(3, 3), z = eig(A) - real(eig(A))
A =
     0     8     0
     1     9     8
     0     2     5
z =
     0
     0
     0
syms t; I = eye(3); p = det(A - t*I)
p =
- t^3 + 14*t^2 - 21*t - 40
figure; ezplot(p, [-20, 20]), grid
% The roots are approximately -1, 3.2, and 12
% Question 3 (b)
[P D] = eig(A)
P =
   -0.5406    0.9901   -0.8703
   -0.8086   -0.1331   -0.3383
   -0.2322    0.0438    0.3579
D =
   11.9656         0         0
         0   -1.0751         0
         0         0    3.1095
% The graphical predictions were fairly close, 12, -1, and 3.2 to 11.96, -1.07, and 3.11 respectively.
p1 = P(:,1), p2 = P(:,2), p3 = P(:,3)
p1 =
   -0.5406
   -0.8086
   -0.2322
p2 =
    0.9901
   -0.1331
    0.0438
p3 =
   -0.8703
   -0.3383
    0.3579
A*p1 - D(1,1)*p1, A*p2 - D(2,2)*p2, A*p3 - D(3,3)*p3
ans =
   1.0e-13 *
    0.1155
    0.1066
    0.0133
ans =
   1.0e-14 *
   -0.1110
   -0.0749
   -0.0083
ans =
   1.0e-14 *
    0.3997
    0.1554
    0.0888
% Theorem 5.2 asserts the following: A square matrix A of order nxn is diagonalizable if, and only if, it's possible to find a set of eigenvectors of A that together form a complete basis for the space R^n. Additionally, the theorem specifies that the matrix A can be represented as A = PDP^-1 (where D is a diagonal matrix and P is an invertible matrix) if, and only if, P's columns are composed of eigenvectors that form a basis for R^n, and the diagonal values in D correspond to the eigenvalues related to P's respective columns. This means that if each column in P represents an eigenvector of A and each diagonal value in D matches its respective eigenvalue, then Pâ€™s columns indeed represent the eigenvector basis for the space R^n.
% Question 3 (c)
A = P*D*inv(P)
A =
    0.0000    8.0000    0.0000
    1.0000    9.0000    8.0000
    0.0000    2.0000    5.0000
% A^5 = P * D^5 * P^-1 
% A^10 = P * D^10 * P^-1
A^5
ans =
   1.0e+05 *
    0.0993    1.1847    1.3542
    0.1481    1.7707    2.0311
    0.0423    0.5078    0.5858
P * D^5 * inv(P)
ans =
   1.0e+05 *
    0.0993    1.1847    1.3542
    0.1481    1.7707    2.0311
    0.0423    0.5078    0.5858
% They are equal
A^10
ans =
   1.0e+10 *
    0.2426    2.9030    3.3341
    0.3629    4.3420    4.9868
    0.1042    1.2467    1.4318
P * D^10 * inv(P)
ans =
   1.0e+10 *
    0.2426    2.9030    3.3341
    0.3629    4.3420    4.9868
    0.1042    1.2467    1.4318
% They are equal
% Question 4 (a)
A = eye(2); B = rand(2);
A(:,1) = B(:,1)/sum(B(:,1)); A(:,2) = B(:,2)/sum(B(:,2))
A =
    0.6679    0.5561
    0.3321    0.4439
[1 1]*A
ans =
     1     1
% [1 1]*A = [(A(1,1) + A(2, 1) A(1, 2) + A(2, 2)] Each column in the result equals the sum of the entries in the corresponding column of A, and since the columns just add up to 1, A is a transition matrix
u = nulbasis(A - eye(2)), v = u/sum(u)
u =
    1.6743
    1.0000
v =
    0.6261
    0.3739
figure; plot([0,v(1)], [0, v(2)]), hold on
% Question 4 (c)
w = rand(2,1), p = w/sum(w)
w =
    0.6030
    0.3462
p =
    0.6352
    0.3648
p = A*p, plot([0,p(1)], [0, p(2)], ':'), hold on
p =
    0.6271
    0.3729
p = A*p, plot([0,p(1)], [0,p(2)], ':'), hold on
p =
    0.6262
    0.3738
p = A*p, plot([0,p(1)], [0,p(2)], ':'), hold on
p =
    0.6261
    0.3739
% Question 5 (a)
A=[0.6, 0.1, 0.5; 0.2,0.7,0.1; 0.2,0.2,0.4]
A =
    0.6000    0.1000    0.5000
    0.2000    0.7000    0.1000
    0.2000    0.2000    0.4000
u = [1, 1, 1]
u =
     1     1     1
u*A
ans =
    1.0000    1.0000    1.0000
% Question 5 (b)
p = [0.5;0.3;0.2]
p =
    0.5000
    0.3000
    0.2000
u*p
ans =
     1
% After 1 year
A*p
ans =
    0.4300
    0.3300
    0.2400
% City is 43%, Suburb is 33%, and Country is 24%
% After 2 years
(A^2)*p
ans =
    0.4110
    0.3410
    0.2480
% City is 41.1%, Suburb is 34.1%, and Country is 24.8%
% After 3 years
(A^3)*p
ans =
    0.4047
    0.3457
    0.2496
% City is 40.47%, Suburb is 34.57%, and Country is 24.96%
% After 5 years
(A^5)*p
ans =
    0.4011
    0.3490
    0.2500
% City is 40.11% Suburb is 34.9%, Country is 25%
% After 8 years
(A^8)*p
ans =
    0.4001
    0.3499
    0.2500
% City is 40.01%, Suburb is 34.99%, Country is 25%
% Question 5 (c)
u = nulbasis(A - eye(3)), v = u/sum(u)
u =
    1.6000
    1.4000
    1.0000
v =
    0.4000
    0.3500
    0.2500
% The vector v and the population distribution vector show a high degree of similarity, suggesting that the population will be nearly the same after 8 years.


